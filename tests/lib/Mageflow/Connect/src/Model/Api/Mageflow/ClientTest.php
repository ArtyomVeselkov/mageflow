<?php

namespace Mageflow\Connect\Model\Api\Mageflow;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-07-15 at 19:44:32.
 */
class ClientTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Client
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $configuration = new \stdClass();
        $configuration->_consumerKey = \Mage::getStoreConfig(\Mageflow_Connect_Model_System_Config::API_CONSUMER_KEY);
        $configuration->_consumerSecret = \Mage::app()->getStore()->getConfig(\Mageflow_Connect_Model_System_Config::API_CONSUMER_SECRET);
        $configuration->_token = \Mage::app()->getStore()->getConfig(\Mageflow_Connect_Model_System_Config::API_TOKEN);
        $configuration->_tokenSecret = \Mage::app()->getStore()->getConfig(\Mageflow_Connect_Model_System_Config::API_TOKEN_SECRET);
        $configuration->_company = \Mage::app()->getStore()->getConfig(\Mageflow_Connect_Model_System_Config::API_COMPANY);
        $configuration->_project = \Mage::app()->getStore()->getConfig(\Mageflow_Connect_Model_System_Config::API_PROJECT);
        $configuration->_instanceKey = \Mage::app()->getStore()->getConfig(\Mageflow_Connect_Model_System_Config::API_INSTANCE_KEY);

        $this->object = new Client($configuration);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function testObject()
    {
        $this->markTestSkipped();
        $this->assertInstanceOf('Mageflow\Connect\Model\Api\Mageflow\Client',
            $this->object);
        $this->assertNotEmpty($this->object->getConsumerKey());
        $this->assertNotEmpty($this->object->getConsumerSecret());
        $this->assertNotEmpty($this->object->getToken());
        $this->assertNotEmpty($this->object->getTokenSecret());
        $this->assertNotEmpty($this->object->_company);
        $this->assertNotEmpty($this->object->_project);
        $this->assertNotEmpty($this->object->_instanceKey);
    }

    /**
     * @covers  Mageflow\Connect\Model\Api\Mageflow\Client::getApiUrl()
     */
    public function testGetApiUrl()
    {
        $apiUrl = $this->object->getApiUrl();
        $this->assertNotEmpty($apiUrl);
        $this->assertContains('https://', $apiUrl);
    }

    /**
     * Test getting companies
     *
     * @covers  Mageflow\Connect\Model\Api\Mageflow\Client::get()
     */
    public function testGetCompanies()
    {
        $response = $this->object->get('company');
        $this->assertNotEmpty($response);
        $this->assertContains('timestamp', $response);
        $this->assertContains('count', $response);
        $this->assertContains('pagecount', $response);
        $this->assertContains('pagesize', $response);
        $this->assertContains('items', $response);
    }

    /**
     * Test getting projects
     *
     * @covers  Mageflow\Connect\Model\Api\Mageflow\Client::get()
     */
    public function testGetProjects()
    {
        $response = $this->object->get('project');
        $this->assertNotEmpty($response);
        $this->assertContains('timestamp', $response);
        $this->assertContains('count', $response);
        $this->assertContains('pagecount', $response);
        $this->assertContains('pagesize', $response);
        $this->assertContains('items', $response);
    }

    public function testPost()
    {
        $data = array(
            'instance_key' => 'f4b9ec30ad9f68f89b29639786cb62ef',
            'description' => 'toredad muudatused',
            'items' => array(
                array(
                    'type' => 'cms/block',
                    'encoding' => 'json',
                    'data' => 'mingi html',
                    'metainfo' => array(
                        'external_reference' => 'tema ID originaalsysteemis',
                        'name' => 'value',
                    )
                ),
                array(
                    'type' => 'image/png',
                    'encoding' => 'base64',
                    'data' => 'base46endcodebinary',
                    'metainfo' => array(
                        'external_reference' => 'tema ID originaalsysteemis',
                        'name' => 'value',
                    )
                )
            )
        );
        $response = $this->object->post('changeset', $data);
        $this->assertTrue($response);
    }

}
