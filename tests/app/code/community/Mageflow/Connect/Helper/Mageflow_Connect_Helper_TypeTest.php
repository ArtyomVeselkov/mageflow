<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-08-09 at 18:11:13.
 */
class Mageflow_Connect_Helper_TypeTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Mageflow_Connect_Helper_Type
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = Mage::helper('mageflow_connect/type');
//        $this->object = Mage::helper('Mageflow_Connect_Helper_Type');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function testInstance()
    {
        $this->assertInstanceOf('Mageflow_Connect_Helper_Type', $this->object);
    }

    public function testConfigModel()
    {
        $configModel = Mage::getSingleton('api2/config');
        $typeNodeList = $configModel->getResourceGroup('mageflow');
        $this->assertNotNull($typeNodeList);
        $this->assertInstanceOf('Mage_Core_Model_Config_Element', $typeNodeList);
    }

    /**
     * @covers Mageflow_Connect_Helper_Type::getTypes()
     */
    public function testGetTypes()
    {
        $typeList = $this->object->getTypes();
        print_r($typeList);
    }

    /**
     * @covers Mageflow_Connect_Helper_Type::getSupportedTypes()
     */
    public function testGetSupportedTypes()
    {
        $typeList = $this->object->getSupportedTypes();
        print_r($typeList);
    }

    /**
     * @covers Mageflow_Connect_Helper_Type::getSupportedTypes()
     */
    public function testGetType()
    {
        $type = $this->object->getType('cms_page');
        print_r($type);
    }

    public function testGetHandler()
    {
        $types = array(
            'Mage_Core_Model_Store',
            'Mage_Core_Model_Store_Group',
            'Mage_Core_Model_Website',
            'Mage_Eav_Model_Entity_Attribute_Group'
        );
        foreach ($types as $typeName) {
            $handler = $this->object->getHandlerClass($typeName);
            printf("%s\n", $handler);
            $this->assertNotNull($handler);
        }
    }

}
