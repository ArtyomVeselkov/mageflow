<?php

/**
 * Html.php
 *
 * PHP version 5
 *
 * @category   MFX
 * @package    Mageflow_Connect
 * @subpackage Model
 * @author     Prototypely Ltd, Estonia <info@prototypely.com>
 * @copyright  Copyright © 2017 Prototypely Ltd, Estonia (http://prototypely.com) 
 * @license MIT Copyright (c) 2017 Prototypely Ltd
 * @link       http://mageflow.com/
 */

/**
 * Mageflow_Connect_Model_Api2_Renderer_Html
 * Webservice API2 renderer of HTML type model
 *
 * @category   MFX
 * @package    Mageflow_Connect
 * @subpackage Model
 * @author     Prototypely Ltd, Estonia <info@prototypely.com>
 * @copyright  Copyright © 2017 Prototypely Ltd, Estonia (http://prototypely.com) 
 * @license MIT Copyright (c) 2017 Prototypely Ltd
 * @link       http://mageflow.com/
 */
class Mageflow_Connect_Model_Api2_Renderer_Html
    implements Mage_Api2_Model_Renderer_Interface
{
    /**
     * Adapter mime type
     */
    const MIME_TYPE = 'text/html';

    /**
     * Render API resource as HTML
     *
     * @param mixed $data
     *
     * @return string
     */
    public function render($data)
    {
        $content = $this->_renderArray($data);
        $html
            = <<<HTML
<html>
<head>
    <title>MageFlow API documentation</title>
    <style type="text/css">
        body{
            font-family: sans-serif;
            font-size: 12px;
        }
    </style>
</head>
<body>
$content
</body>
</html>
HTML;
        return $html;
    }


    /**
     * Renders array elements to HTML
     *
     * @param \Mage_Core_Model_Config_Element $data
     *
     * @return string
     */
    private function _renderArray($data)
    {
        $html = "<h2>API Resources by groups</h2>";
        $html .= '<ul>';
        if ($data instanceof Mage_Core_Model_Config_Element) {
            //remap array by groups
            $out = array();
            foreach ($data->children() as $name => $element) {
                $group = (string)$element->group;
                $out[$group][] = $element;
            }
            foreach ($out as $group => $elementArr) {
                $html .= sprintf("\t<li>\n<h4>%s</h4>\n", $group);
                $html .= "<ul>\n";
                foreach ($elementArr as $element) {
                    $html .= sprintf('<h5>%s</h5><ul>', $element->title);
                    if ($element->routes) {

                        foreach ($element->routes->children() as $routeEntity) {
                            $html .= sprintf(
                                '<li>
                                    <a href="/api/rest%1$s">/api/rest%1$s</a>
                                </li>',
                                $routeEntity->route
                            );
                        }
                    }
                    $html .= '</ul>';
                }
                $html .= "</ul>\n";
                $html .= "\t</li>\n";
            }
        }
        $html .= '</ul>';
        return $html;
    }

    /**
     * Get MIME type generated by renderer
     *
     * @return string
     */
    public function getMimeType()
    {
        return self::MIME_TYPE;
    }
}
